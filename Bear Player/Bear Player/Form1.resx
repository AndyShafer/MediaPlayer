<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>